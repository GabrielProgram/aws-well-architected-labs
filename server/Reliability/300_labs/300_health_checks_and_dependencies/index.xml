<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Level 300: Implementing Health Checks and Managing Dependencies to improve Reliability on AWS Well-Architected Labs</title><link>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/</link><description>Recent content in Level 300: Implementing Health Checks and Managing Dependencies to improve Reliability on AWS Well-Architected Labs</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 24 Apr 2020 11:16:08 -0400</lastBuildDate><atom:link href="https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy the Infrastructure and Application</title><link>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/1_deploy_app/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/1_deploy_app/</guid><description>You will create a multi-tier architecture using AWS and run a simple service on it. The service is a web server running on Amazon EC2. It has an Elastic Load Balancer reverse-proxy in front of it, and has a dependency on Amazon DynamoDB.
Note: The concepts covered by this lab apply whether your service dependency is an AWS resource like Amazon DynamoDB, or an external service called via API. The DynamoDB dependency here acts as a mock for an external service called RecommendationService.</description></item><item><title>Handle failure of service dependencies</title><link>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/2_handle_dependency/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/2_handle_dependency/</guid><description>2.1 System dependency initially healthy You already observed that all three EC2 instances are successfully serving requests
In a new tab navigate to ELB Target Groups console
By clicking here to open the AWS Management Console or navigating through the AWS Management Console: Services &amp;gt; EC2 &amp;gt; Load Balancing &amp;gt; Target Groups Leave this tab open as you will be referring back to it multiple times Click on the Targets tab (bottom half of screen)</description></item><item><title>Implement deep health checks</title><link>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/3_deep_healthcheck/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/3_deep_healthcheck/</guid><description>3.1 Re-enable the dependency service For the next part of the lab restore access to the getRecommendation API on the RecommendationService
Return to the AWS Systems Manager &amp;gt; Parameter Store on the AWS Management Console Set the value of RecommendationServiceEnabled back to true and Save changes Confirm the web service is now returning &amp;ldquo;personalized&amp;rdquo; recommendations again 3.2 Inject fault on a single server Previously you simulated a failure of the service dependency.</description></item><item><title>Fail open when appropriate</title><link>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/4_fail_open/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/4_fail_open/</guid><description>4.1 Disable RecommendationService again Confirm the service is healthy Refresh the web service multiple times and note that personalized recommendations are being served from all three servers You will now simulate another complete failure of the RecommendationService. Every request will fail for every request on every server Return to the AWS Systems Manager &amp;gt; Parameter Store on the AWS Management Console Set the value of RecommendationServiceEnabled once again to false and Save changes What is the expected behavior?</description></item><item><title>Tear down this lab</title><link>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/5_cleanup/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/5_cleanup/</guid><description>If you are attending an in-person workshop and were provided with an AWS account by the instructor:
There is no need to tear down the lab. Feel free to continue exploring. Log out of your AWS account when done. If you are using your own AWS account:
You may leave these resources deployed for as long as you want. When you are ready to delete these resources, see the following instructions Remove AWS CloudFormation provisioned resources How to delete an AWS CloudFormation stack If you are already familiar with how to delete an AWS CloudFormation stack, then skip to the next section: Delete workshop CloudFormation stacks</description></item></channel></rss>