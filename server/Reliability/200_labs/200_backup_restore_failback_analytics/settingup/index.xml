<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Setting Up on AWS Well-Architected Labs</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/settingup/</link><description>Recent content in Setting Up on AWS Well-Architected Labs</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 29 Jul 2020 13:22:15 -0600</lastBuildDate><atom:link href="https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/settingup/index.xml" rel="self" type="application/rss+xml"/><item><title>Backup Region</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/settingup/backupregion/</link><pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate><guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/settingup/backupregion/</guid><description>Backup Region In this section we&amp;rsquo;ll deploy necessary infrastructure to the backup region to support data backup and workload failover.
S3 bucket for templates First, create an S3 bucket to hold the CloudFormation templates. We&amp;rsquo;ll call this the TEMPLATEBUCKET. Choose a globally unique bucket name that adheres to the bucket naming rules .
aws s3 mb s3://&amp;lt;TEMPLATEBUCKET&amp;gt; --region &amp;lt;REGION&amp;gt; aws s3api put-bucket-versioning --bucket &amp;lt;TEMPLATEBUCKET&amp;gt; --versioning-configuration Status=Enabled Download and review scripts and templates Download the following files:</description></item><item><title>Primary Region</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/settingup/primaryregion/</link><pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate><guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/settingup/primaryregion/</guid><description>Primary Region In this section we&amp;rsquo;ll deploy the workload to the primary region.
Create a prefix list for ingress Follow the instructions to create a VPC prefix list that specifes the CIDR ranges for ingress. We use this prefix list to control access to lab resources from an approved network block. If you are using an Event Engine account, you can create a prefix list that just contains 0.0.0.0/0.
Download and review scripts and templates Download the following files:</description></item><item><title>Test Workload</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/settingup/testworkload/</link><pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate><guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/settingup/testworkload/</guid><description>Test the Workload In this section we&amp;rsquo;ll make sure that the workload is running properly, and that data is replicating to the backup region. We use a python script to simulate a stream of incoming tweets.
Open a Session Manager connection to the EC2 instance sample producer in the primary region. You can find the instance ID and the Global Accelerator DNS endpoint in the CloudFormation output.
Open the EC2 console and navigate to Instances.</description></item></channel></rss>