<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Failback on AWS Well-Architected Labs</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/</link><description>Recent content in Failback on AWS Well-Architected Labs</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 29 Jul 2020 13:22:15 -0600</lastBuildDate><atom:link href="https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/index.xml" rel="self" type="application/rss+xml"/><item><title>Recreate DynamoDB</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/recreatedynamodb/</link><pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate><guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/recreatedynamodb/</guid><description>Recreate DynamoDB When failing back to the primary region, we need to get the latest data from the DynamoDB table in the backup region into the table in the primary region. We&amp;rsquo;ll do this by restoring the table from the backup region. Note that using DynamoDB Global Tables is a more convenient way to handle multi-region scenarios with DynamoDB, but in this example we&amp;rsquo;ll use the less convenient but more cost effective approach of relying on backups.</description></item><item><title>Redirect Traffic</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/traffic/</link><pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate><guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/traffic/</guid><description>Redirecting traffic to primary region Execute the SSM automation document failback_runbook. You&amp;rsquo;ll need to provide this input:
BackupGroupArn: Set this to the ARN of the Global Accelerator endpoint group that points to the backup region. X Lab complete! Now that you have completed this lab, make sure to update your Well-Architected review if you have implemented these changes in your workload.
Click here to access the Well-Architected Tool Previous Step Next Step</description></item><item><title>Remove Redundant Infrastructure</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/removeinfra/</link><pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate><guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/removeinfra/</guid><description>Removing redundant infrastructure Delete the infrastructure stack (BackupRestoreInfra) from the backup region. In our simple example, leaving this infrastructure in place wouldn&amp;rsquo;t do any harm, other than resulting in some unnecessary expense. But in a more complex scenario you might have scheduled jobs running that would conflict with replicated data coming from the primary region.
You can leave this stack in place for a time if you want to ensure that the workload is running properly in the primary region, but at some point you&amp;rsquo;ll want to remove it to eliminate unnecessary cost.</description></item><item><title>Resync Data</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/resync/</link><pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate><guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/resync/</guid><description>Data synchronization We run an inventory in the backup bucket on a daily basis. We can use that to find files that were written directly into the backup bucket rather than through replication. Then we can sync these files back to the primary region.
Let&amp;rsquo;s start with the raw files. In Athena, run this query in the backup region:
MSCK REPAIR TABLE inventory; Note that you must wait for an inventory schedule to complete before you see data in this table.</description></item></channel></rss>