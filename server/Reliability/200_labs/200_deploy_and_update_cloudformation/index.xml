<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Level 200: Deploy and Update CloudFormation on AWS Well-Architected Labs</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/</link><description>Recent content in Level 200: Deploy and Update CloudFormation on AWS Well-Architected Labs</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 24 Apr 2020 11:16:08 -0400</lastBuildDate><atom:link href="https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy Infrastructure using a CloudFormation Stack</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/1_deploy_infra/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/1_deploy_infra/</guid><description>This lab illustrates best practices for reliability as described in the AWS Well-Architected Reliability pillar.
How do you implement change?
Best practice: Deploy changes with automation: Deployments and patching are automated to eliminate negative impact. Design principle: Manage change in automation: Changes to your infrastructure should be made using automation. The changes that need to be managed include changes to the automation, which then can be tracked and reviewed. When this lab is completed, you will have deployed and edited a CloudFormation template.</description></item><item><title>Explore your Deployed Infrastructure</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/2_understand_deploy/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/2_understand_deploy/</guid><description>Here you will explore the CloudFormation stack you deployed in the previous step.
How many resources were created? From the CloudFormation console, click the Resources tab for the CloudFormationLab stack. The listing shows all the resources that were created. Now, look at the simple_stack.yaml template (in your text editor) and compare. How many resources are defined there? Investigate: Why did the deployment not create all of the resources? You may click below for the answer.</description></item><item><title>Configure Deployed Resources using Parameters</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/3_cfn_params/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/3_cfn_params/</guid><description>In this task, you will gain experience changing CloudFormation stack parameters and updating your CloudFormation stack
Your objective is to deploy additional resources used by the VPC to enable connection to the internet 3.1 Update Parameters Go to the AWS CloudFormation console (if not already there) Click on Stacks Click on the CloudFormationLab stack Click Update Leave Use current template selected. You have not yet changed the template Click Next On the Specify stack details screen you now have the opportunity to change the Parameters Change PublicEnabledParam to true Click Next Click Next again, until you arrive at the Review CloudFormationLab screen Scroll down to Change set preview and note several resources are being added At the bottom of the page, select I acknowledge that AWS CloudFormation might create IAM resources with custom names Click Create stack It takes about a minute for the stack update to finish and the stack status is UPDATE_COMPLETE 3.</description></item><item><title>Add an Amazon S3 Bucket to the Stack</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/4_add_s3/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/4_add_s3/</guid><description>In this task, you will gain experience in editing a CloudFormation template and updating your CloudFormation stack
Your objective is to deploy a new Amazon S3 bucket 4.1 Edit the CloudFormation template file From the Amazon S3 Template Snippets documentation page, copy the YAML example for Creating an Amazon S3 Bucket with Defaults Edit the simple_stack.yaml file you downloaded earlier to include an Amazon S3 bucket Under the Resources section add the snippet you copied You do not require any Properties for this new S3 bucket resource Indents are important in YAML &amp;ndash; use two spaces for each indent.</description></item><item><title>Add an Amazon EC2 Instance to the Stack</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/5_add_ec2/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/5_add_ec2/</guid><description>In this task, your objective is to add an Amazon EC2 instance to the template, then update the stack with the revised template.
Whereas the bucket definition was rather simple (just two to four lines), defining an Amazon EC2 instance is more complex because it needs to use associated resources, such as an AMI, security group and subnet.
For this exercise we will assume you now know how to edit your CloudFormation template and update your CloudFormation stack with the updated template.</description></item><item><title>Multi-region Deployment with CloudFormation StackSets</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/6_multi_region_deploy/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/6_multi_region_deploy/</guid><description>There might be situations where you want to deploy the same infrastructure in multiple AWS Regions and/or multiple AWS accounts to increase reliability of the workload or to improve performance by having the infrastructure geographically closer to your end users. You can use AWS CloudFormation StackSets to perform this as a single operation instead of switching regions or accounts to individually deploy each stack.
From an administrator account, you can define a CloudFormation template and use it to provision stacks in multiple target accounts, across multiple AWS Regions.</description></item><item><title>Tear down this lab</title><link>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/7_cleanup/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/7_cleanup/</guid><description>When a CloudFormation stack is deleted, CloudFormation will automatically delete the resources that it created.
If you are attending an in-person workshop and were provided with an AWS account by the instructor:
There is no need to tear down the lab. Feel free to continue exploring. Log out of your AWS account when done. If you are using your own AWS account:
You may leave these resources deployed for as long as you want.</description></item></channel></rss>