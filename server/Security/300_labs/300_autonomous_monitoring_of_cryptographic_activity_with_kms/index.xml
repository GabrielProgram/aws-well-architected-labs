<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Level 300: Autonomous Monitoring Of Cryptographic Activity With KMS on AWS Well-Architected Labs</title><link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/</link><description>Recent content in Level 300: Autonomous Monitoring Of Cryptographic Activity With KMS on AWS Well-Architected Labs</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 01 Nov 2020 11:16:08 -0400</lastBuildDate><atom:link href="https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy The Lab Base Infrastructure</title><link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/1_deploy_the_lab_base_infrastructure/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/1_deploy_the_lab_base_infrastructure/</guid><description>In this section, we will build out a Virtual Public Cloud (VPC) , together with public and private subnets across two Availability Zones , Internet Gateway and NAT gateway along with the necessary routes from both public and private subnets.
This VPC will become the baseline network architecture within which the application will run. When we successfully complete our initial template deployment, our deployed workload should reflect the following diagram:</description></item><item><title>Configure ECS Respository and Deploy The Application Stack</title><link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/2_configure_ecs_repository_and_deploy_application_stack/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/2_configure_ecs_repository_and_deploy_application_stack/</guid><description>2.0. Introduction. In this section, we are going to prepare our sample application. We will package this as a docker image and push to a repository.
As we mentioned in our introduction, our sample application will be running in a docker container which we will deploy using Amazon ECS .
In preparation for the deployment, we will need to package our application as a docker image and push it into ECR .</description></item><item><title>Configure CloudTrail</title><link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/3_configure_and_check_cloudtrail/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/3_configure_and_check_cloudtrail/</guid><description>We will now focus on the creation and configuration of the CloudTrail service. This represents the source of record for all API calls generated within our architecture which we will apply filters to later. Note in the architecture below how CloudTrail integrates with the other AWS services we will deploy:
Click here for CloudFormation command-line deployment steps Command Line: 3.1. Command Line Deployment Firstly, download the logging template from here. To deploy from the command line, ensure that you have installed and configured AWS CLI with the appropriate credentials.</description></item><item><title>Configure The Workload Logging and Alarm</title><link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/4_configure_the_workload_logging_and_alarm/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/4_configure_the_workload_logging_and_alarm/</guid><description>4.1. We are now going to create a filter within our CloudWatch Log Group. This filter will generate a CloudWatch metric which we will use as to create our alarm.
To create your filter, complete the following configuration steps:
4.1.1. Navigate to CloudWatch in your console and click on Log Groups on the side menu.
4.1.2. Locate the pattern1-logging-loggroup you created in the previous section and click on the the log group as shown:</description></item><item><title>Testing the Workload Functionality</title><link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/5_testing_the_workload_functionality/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/5_testing_the_workload_functionality/</guid><description>Following the completion of section 4, we can complete the lab by testing the workload. We will achieve this by running a decrypt API call to our application. This will trigger a failed decrypt event which should result in our alarm being triggered and an SNS notification sent to the email address which you specified as an endpoint in the previous section.
Complete the following steps to test the system functionality:</description></item><item><title>Teardown</title><link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/6_teardown/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/6_teardown/</guid><description>The following steps will remove the services which are deployed in the lab.
6.1. Remove the CloudWatch Alarm 6.1.1. From the CloudWatch console, select Alarms from the left-hand dashboard, and select the alarms which you created in the lab using the radio box.
6.1.2. From the Actions button, select Delete and confirm the alarm deletion.
6.2. Remove the CloudWatch Metric Filter From the CloudWatch console, select Log group under Logs and locate the log group which you created in the lab.</description></item></channel></rss>