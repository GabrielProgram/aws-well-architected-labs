<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Level 300: Autonomous Patching With EC2 Image Builder And Systems Manager on AWS Well-Architected Labs</title><link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/</link><description>Recent content in Level 300: Autonomous Patching With EC2 Image Builder And Systems Manager on AWS Well-Architected Labs</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 24 Apr 2020 11:16:08 -0400</lastBuildDate><atom:link href="https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy The Lab Base Infrastructure</title><link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/1_deploy_the_lab_base_infrastructure/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/1_deploy_the_lab_base_infrastructure/</guid><description>In this section, we will build out a Virtual Public Cloud (VPC) , together with public and private subnets across two Availability Zones , Internet Gateway and NAT gateway along with the necessary routes from both public and private subnets.
This VPC will become the baseline network architecture within which the application will run. When we successfully complete our initial stage template deployment, our deployed workload should reflect the following diagram:</description></item><item><title>Deploy The Application Infrastructure</title><link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/2_deploy_the_application_infrastructure/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/2_deploy_the_application_infrastructure/</guid><description>The second section of the lab will build out the sample application stack what will run in the VPC which was build in section 1.
This application stack will comprise of the following :
Application Load Balancer (ALB) . Autoscaling Group along with it&amp;rsquo;s Launch Configuration. Once you completed below steps, you base architecture will be as follows:
Building each components in this section manually will take a bit of time, and because our objective in this lab is to show you how to automate patching through AMI build and deployment.</description></item><item><title>Deploy The AMI Builder Pipeline</title><link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/3_deploy_the_ami_builder_pipeline/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/3_deploy_the_ami_builder_pipeline/</guid><description>In this section we will be building our Amazon Machine Image Pipeline leveraging EC2 Image Builder service. EC2 Image Builder is a service that simplifies the creation, maintenance, validation, sharing, and deployment of Linux or Windows Server images for use with Amazon EC2 and on-premises. Using this service, eliminates the automation heavy lifting you have to build in order to streamline the build and management of your Amazon Machine Image.</description></item><item><title>Deploy The Build Automation With SSM</title><link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/4_deploy_the_build_automation_with_ssm/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/4_deploy_the_build_automation_with_ssm/</guid><description>Now that our AMI Builder Pipeline is built, we can now work on the final automation stage with Systems Manager.
In this section we will orchestrate the build of a newly patched AMI and its associated deployment into our application cluster.
To automate this activities we will leverage AWS Systems Manager Automation Document .
Using our SSM Automation document we will execute the following activities:
Automate the execution of the EC2 Image Builder Pipeline.</description></item><item><title>Teardown</title><link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/5_teardown/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/5_teardown/</guid><description>The following steps will remove the services which are deployed in the lab.
Teardown of CloudFormation Deployment 5.1. Remove the Automation Stack From the CloudFormation console, select the stack named pattern3-automate from the list and select Delete and confirm the deletion in the next dialog box.
5.2. Remove the Pipeline Stack 5.2.1. Note: The stack will fail to remove unless the S3 bucket is empty. As a pre requisite, remove the contents of the bucket before continuing.</description></item></channel></rss>