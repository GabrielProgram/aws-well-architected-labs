<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Level 300: Multilayered API Security with Cognito and WAF on AWS Well-Architected Labs</title><link>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/</link><description>Recent content in Level 300: Multilayered API Security with Cognito and WAF on AWS Well-Architected Labs</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 30 May 2021 11:16:08 -0400</lastBuildDate><atom:link href="https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy the lab base infrastructure</title><link>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/1_deploy_the_lab_base_infrastructure/</link><pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/1_deploy_the_lab_base_infrastructure/</guid><description>In this section we will build out our base lab infrastructure. This will consist of a public API gateway which connects to Lambda (application layer). The application layer will connect to RDS for MySQL (database layer) within a Virtual Private Cloud (VPC) . The environment will be deployed to separate private subnets which will allow for segregation of application and network traffic across multiple Availability Zones . We will also deploy an Internet Gateway and NAT gateway along with appropriate routes from both public and private subnets.</description></item><item><title>Use Secrets Securely</title><link>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/2_use_secrets_securely/</link><pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/2_use_secrets_securely/</guid><description>Passwords remain vulnerable to brute force attack methods even if we store our secrets in a secure way. Because of this we can augment our deployed architecture to limit the lifespan of a password through the use of automatic rotation. An ideal way to approach this task is through the use of AWS Secrets Manager, which can enable you to automatically rotate secrets for other databases or 3rd party services.</description></item><item><title>Prevent requests from accessing API directly</title><link>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/3_prevent_requests_from_accessing_api_directly/</link><pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/3_prevent_requests_from_accessing_api_directly/</guid><description>In this section you will be building your own distribution of Amazon CloudFront which offers protection at the edge of your architecture. When integrating CloudFront with regional API endpoints, not only does the service distribute traffic across multiple edge locations to improve performance, but also it supports geoblocking, which you can use to help block requests from particular geographic locations from being served. With Amazon CloudFront, you can also enforce encrypted end-to-end connections to an origin API by using HTTPS.</description></item><item><title>Application layer defence</title><link>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/4_application_layer_defence/</link><pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/4_application_layer_defence/</guid><description>In this section we will tighten security using AWS WAF further to mitigate the risk of vulnerabilities such as SQL Injection, Distributed denial of service (DDoS) and other common attacks. WAF allows you to create your own custom rules to decide whether to block or allow HTTP requests before they reach your application.
4.1. Identify the risk of vulnerabilities. A SQL Injection attack consists of insertion of a SQL query via the input data to the application.</description></item><item><title>Control access to API</title><link>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/5_control_access_to_api/</link><pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/5_control_access_to_api/</guid><description>In this section we will be building API Access Control with Amazon Cognito . This will extend our architecture to ensure that only identified users are permitted access to the API.
5.1. Identify the risk of vulnerabilities. Even though we have controlled traffic at multiple layers, anyone who knows your CloudFront Domain Name can access your API. Furthermore we do not know who accessed your API, so the owner of the traffic remains anonymous.</description></item><item><title>Tear down</title><link>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/6_teardown/</link><pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate><guid>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/6_teardown/</guid><description>The following steps will remove the services which are deployed in the lab.
1. Delete CloudFormation stacks Simply delete 3 CloudFormation stack created in this lab.
One CloudFormation Stack for Cloud9 Two CloudFormation Stacks to build out the lab base infrastructure and enhanced security services. 2. Remove the CloudWatch Log Group From the CloudWatch console, select Log group under Logs and select the log group which you created in the lab.</description></item></channel></rss>