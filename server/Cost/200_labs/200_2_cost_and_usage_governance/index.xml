<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Level 200: Cost and Usage Governance on AWS Well-Architected Labs</title><link>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/</link><description>Recent content in Level 200: Cost and Usage Governance on AWS Well-Architected Labs</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 24 Apr 2020 11:16:08 -0400</lastBuildDate><atom:link href="https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/index.xml" rel="self" type="application/rss+xml"/><item><title>Create a group of users for testing</title><link>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/1_create_test_group/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/1_create_test_group/</guid><description>This lab requires you to develop a restrictive IAM policy, then apply the policies to a group of users, then login as a user in that group and verify the policy. We will create this test group.
Go to the IAM service page: Click on Groups, click Create New Group: Set the group name to CostTest and click Next Step: Click Next Step: Click Create Group: Click Users: Click Add user: Configure the user as follows:</description></item><item><title>Create an IAM Policy to restrict service usage by region</title><link>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/2_ec2_restrict_region/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/2_ec2_restrict_region/</guid><description>To manage costs you need to manage and control your usage. AWS offers multiple regions, so depending on your business requirements you can limit access to AWS services depending on the region. This can be used to ensure usage is only allowed in specific regions which are more cost effective, and minimize associated usage and cost, such as data transfer.
We will create a policy that allows all EC2, RDS and S3 access in a single region only.</description></item><item><title>Create an IAM Policy to restrict EC2 usage by family</title><link>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/3_ec2_restrict_family/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/3_ec2_restrict_family/</guid><description>AWS offers different instance families within EC2. Depending on your workload requirements - different types will be most cost effective. For non-specific environments such as testing or development, you can restrict the instance families in those accounts to the most cost effective generic types. It is also an effective way to increase Savings Plan or Reserved Instance utilization, by ensuring these accounts will consume any available commitment discounts.
We will create a policy that allows operations on specific instance families only.</description></item><item><title>Extend an IAM Policy to restrict EC2 usage by instance size</title><link>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/4_ec2_restrict_size/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/4_ec2_restrict_size/</guid><description>We can also restrict the size of instance that can be launched. This can be used to ensure only low cost instances can be created within an account. This is ideal for testing and development, where high capacity instances may not be required. We will extend the EC2 family policy above, and add restrictions by adding the sizes of instances allowed.
Extend the EC2Family_Restrict IAM Policy Log on to the console as your regular user with the required permissions, go to the IAM service page: Click on Policies on the left menu: Click on Filter policies, then select Customer managed: Click on EC2_FamilyRestrict to modify it: Click on Edit policy: Click on the JSON tab: Modify the policy by adding in the sizes, add in nano, medium, large, be careful not to change the syntax and not remove the quote characters.</description></item><item><title>Create an IAM policy to restrict EBS Volume creation by volume type</title><link>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/5_ec2_volume_type/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/5_ec2_volume_type/</guid><description>Extending cost optimization governance beyond compute instances will ensure overall higher levels of cost optimization. Similar to EC2 instances, there are different storage types. Governing the type of storage that can be created in an account can be effective to minimize cost.
We will create an IAM policy that denies operations that contain provisioned IOPS (io1) EBS volume types. This will not only restrict creating a volume, but all other actions that attempt to use this volume type.</description></item><item><title>Teardown</title><link>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/6_tear_down/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/6_tear_down/</guid><description>Log onto the console as your regular user with the required permissions.
Delete the IAM policies We will delete the IAM policies created, as they are no longer applied to any groups.
Log on to the console as your regular user with the required permissions, go to the IAM service page: Click on Policies on the left: 3.Click on Filter Policies and select Customer managed: Select the policy you want to delete Region_Restrict: Click on Policy actions, and select Delete: Click on Delete: Perform the same steps above to delete the Ec2_FamilyRestrict and EC2EBS_Restrict policies.</description></item></channel></rss>