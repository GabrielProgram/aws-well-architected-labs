<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Level 300: Automated Athena CUR Query and E-mail Delivery on AWS Well-Architected Labs</title><link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/</link><description>Recent content in Level 300: Automated Athena CUR Query and E-mail Delivery on AWS Well-Architected Labs</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 24 Apr 2020 11:16:08 -0400</lastBuildDate><atom:link href="https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview architecture</title><link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/1_architecture/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/1_architecture/</guid><description>
X Lab complete! Now that you have completed this lab, make sure to update your Well-Architected review if you have implemented these changes in your workload.
Click here to access the Well-Architected Tool Previous Step Next Step</description></item><item><title>Create S3 Bucket</title><link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/2_create_bucket/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/2_create_bucket/</guid><description>The first step is to create an S3 bucket which will hold the lambda code and also used for storage of the reports. NOTE: the bucket must be in the same region as the Lambda function, it is advised to use a single region for all resources within this lab.
This bucket will store the reports and Athena CUR query results. These will not be deleted, to enable historical reporting, so delete these periodically if you do not require them.</description></item><item><title>Create an IAM policy and role for Lambda function</title><link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/3_iam_policy_and_role/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/3_iam_policy_and_role/</guid><description>This step is used to create an IAM policy and a role that allows Lambda function to perform Athena CUR query and deliver processed CUR report via SES.
Log into IAM console, click on Policies and click on Create Policy: Click on the JSON tab, modify the following policy, replacing the your-cur-query-results-bucket string. Make sure you add &amp;ldquo;*&amp;rdquo; at the end of the bucket name so the whole bucket is writable:</description></item><item><title>Configure parameters of function code and upload code to S3</title><link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/4_configure_function_parameters/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/4_configure_function_parameters/</guid><description>This step is used to edit parameters (CUR database name and table, SES sender and recipient etc) in the Lambda function code, which is then uploaded to S3 for Lambda execution.
Download function code https://d3h9zoi3eqyz7s.cloudfront.net/Cost/AutoCURDelivery.zip to your local disk. This zip file includes: - auto_cur_delivery.py - Lambda function code
config.yml - Configuration file package/ - All dependencies, libraries, including pandas, numpy, Xlrd, Openpyxl, Xlsxwriter, pyyaml Unzip config.yml from within AutoCURDelivery.zip, and open it into a text editor.</description></item><item><title>Create a Lambda function</title><link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/5_create_lambda_function/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/5_create_lambda_function/</guid><description>We will now create a Lambda function which will run the code and produce the reports. NOTE: this Lambda function must be created in the same region as S3 bucket for CUR query results created earlier.
Go to the Lambda console, click Create function.
Select Author from scratch, configure the following parameters:
Function name: Auto_CUR_Delivery Runtime: Python 3.7 Execution role: Use an existing role Existing role: Lambda_Auto_CUR_Delivery_Role click Create function. In the top right-hand corner of Lambda configuration page, click Select a test event drop-down box and choose Configure test events.</description></item><item><title>Customize query strings and create scheduled CloudWatch event</title><link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/6_cloudwatch_event/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/6_cloudwatch_event/</guid><description>In you local path where AutoCURDelivery.zip is located. Unzip and re-open config.yml in a text editor.
Find Body_Text, insert a description of new query MTD_Inter_AZ_DT.
MTD_Inter_AZ_DT - Month to date inter-AZ data transfer split by resource ID Find the section Query_String_List, add following new query string at the bottom of file (note the indent should be same as other query strings), save config.yml.
- MTD_Inter_AZ_DT: SELECT year ,month(line_item_usage_start_date) month ,line_item_product_code as Product_Name ,line_item_resource_id as Resource_Id ,line_item_usage_type as Usage_Type ,sum(line_item_usage_amount) as &amp;quot;Inter_AZ_Data_Transfer(GB)&amp;quot; ,sum(line_item_unblended_cost) as &amp;quot;Cost($)&amp;quot; FROM CUR_DB WHERE &amp;quot;line_item_usage_type&amp;quot; like '%Bytes%' AND &amp;quot;line_item_usage_type&amp;quot; like '%Regional%' AND year='CUR_YEAR' AND month='CUR_MONTH' GROUP BY 1,2,3,4,5 ORDER BY sum(&amp;quot;line_item_unblended_cost&amp;quot;) desc The paramemters CUR_DB, CUR_MONTH, CUR_YEAR are replaced when function is running</description></item><item><title>Teardown</title><link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/7_tear_down/</link><pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/7_tear_down/</guid><description>Delete IAM role Lambda_Auto_CUR_Delivery_Role and policy Lambda_Auto_CUR_Delivery_Access Delete Lambda function Auto_CUR_Delivery Delete CloudWatch event 5_min_auto_cur_delivery Delete SES configuration Delete S3 bucket for CUR query results storing X Congratulations! Now that you have completed the lab, if you have implemented this knowledge in your environment, you should re-evaluate the questions in the Well-Architected tool. This lab specifically helps you with COST 3 - &amp;ldquo;How do you monitor usage and cost?&amp;rdquo;</description></item></channel></rss>