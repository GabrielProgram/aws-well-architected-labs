<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Windows Server on AWS Well-Architected Labs</title><link>https://wellarchitectedlabs.com/tags/windows-server/</link><description>Recent content in Windows Server on AWS Well-Architected Labs</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 19 Nov 2020 12:00:00 -0400</lastBuildDate><atom:link href="https://wellarchitectedlabs.com/tags/windows-server/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploying the infrastructure</title><link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/1_deploy_vpc/</link><pubDate>Thu, 19 Nov 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/1_deploy_vpc/</guid><description>The CloudFormation template that accompanies this lab requires the ability to create IAM Roles and IAM Instance Profiles. If the account you are using does not have these capabilities, you will not be able to complete this lab.
Deploy VPC This step will create the VPC and all components using the example CloudFormation template.
Download the latest version of the CloudFormation template here: vpc-alb-app-db.yaml Sign in to the AWS Management Console, select your preferred region, and open the CloudFormation console at https://console.</description></item><item><title>Deploying an instance</title><link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/2_deploy_instance/</link><pubDate>Thu, 19 Nov 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/2_deploy_instance/</guid><description>The CloudFormation template that accompanies this lab requires the ability to create IAM Roles and IAM Instance Profiles. If the account you are using does not have these capabilities, you will not be able to complete this lab.
In the upper right portion of the console, select the region you wish to deploy the lab into. For this example we will be using us-west-2 Go to this link: https://console.aws.amazon.com/ec2/v2/home?#KeyPairs Type &amp;ldquo;wapetestlab&amp;rdquo; in the name field For File format select &amp;ldquo;pem&amp;rdquo; Click on &amp;ldquo;Create Key Pair&amp;rdquo; When your browser prompts, save the file in a location on your local computer.</description></item><item><title>Create CloudWatch Dashboard</title><link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/3_creating_cloudwatch_dashboard/</link><pubDate>Thu, 19 Nov 2020 12:00:00 -0400</pubDate><guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/3_creating_cloudwatch_dashboard/</guid><description>We have deployed a single Windows 2 EC2 instance and we will now create a CloudWatch Dashboard to monitor the memory and CPU resources consumed by the instance.
From the AWS Console, click the search box and type in CloudWatch (or you can open this link directly https://console.aws.amazon.com/cloudwatch/home ) Click on Dashboards link on the left side Click on Create Dashboard button If you have not done so already, make sure to click &amp;ldquo;Try out the new interface&amp;rdquo; to see the updated CloudWatch interface.</description></item><item><title>Level 100: Monitoring Windows EC2 instance with CloudWatch Dashboards</title><link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/</link><pubDate>Thu, 19 Nov 2020 11:16:08 -0400</pubDate><guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/</guid><description>Authors Eric Pullen, Performance Efficiency Lead Well-Architected Introduction This hands-on lab will guide you through creating an Amazon EC2 instance for Windows and then configuring a Amazon CloudWatch Dashboard to get aggregated views of the health and performance information for that instance. This lab should enables you to quickly get started with CloudWatch monitoring and explore account and resource-based views of metrics. You can find more best practices by reading the Performance Efficiency Pillar of the AWS Well-Architected Framework .</description></item><item><title>Add metrics to Dashboard</title><link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/4_adding_metrics_to_dashboard/</link><pubDate>Thu, 19 Nov 2020 12:00:00 -0400</pubDate><guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/4_adding_metrics_to_dashboard/</guid><description>Now that we have a dashboard for our Windows EC2 instance, we can add an additional metric for available memory.
Let&amp;rsquo;s add a new widget to our CloudWatch Dashboard. Click on the &amp;ldquo;Add Widget&amp;rdquo; button in the upper right corner. Click Line, then next Click Metrics and then Configure Select CWAgent and then select the second metric group &amp;ldquo;ImageId, InstanceId, InstanceType, objectname&amp;rdquo; Make sure to search only for the InstanceId if you have multiple machines reporting metrics Find the &amp;ldquo;Memory available Mbytes&amp;rdquo; and click the check box next to it.</description></item><item><title>Generate CPU and Memory load</title><link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/5_generating_load/</link><pubDate>Thu, 19 Nov 2020 12:00:00 -0400</pubDate><guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/5_generating_load/</guid><description>We have a CloudWatch dashboard to show us CPU and Memory statistics for the deployed EC2 instance. In order to showcase the dashboards, lets add a synthetic load to the machine. We have 2 PowerShell scripts that have already been deployed to the instance to facilitate this.
cpu_stress.ps1 This script will start multiple threads (one per CPU in the machine) to keep the processor busy doing a simple math computation. We set the thread priority to &amp;ldquo;Lowest&amp;rdquo; so it should still allow system processes to continue.</description></item><item><title>Teardown</title><link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/6_cleanup/</link><pubDate>Thu, 19 Nov 2020 12:00:00 -0400</pubDate><guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/6_cleanup/</guid><description>Summary In order to monitor your compute resources to ensure they are performing properly, you must record performance related metrics. In this simple lab, you were able to create an EC2 instance and generate a simulated high-load situation to observe how CloudWatch can be used to monitor those resources. These are important concepts that you should use across all of your compute resources to ensure you are meeting PERF7 - &amp;ldquo;How do you monitor your resources to ensure they are performing?</description></item></channel></rss>