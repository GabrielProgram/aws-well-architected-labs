<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>100 - Dependency Monitoring on AWS Well-Architected Labs</title><link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/</link><description>Recent content in 100 - Dependency Monitoring on AWS Well-Architected Labs</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 15 Sep 2020 11:16:08 -0400</lastBuildDate><atom:link href="https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy the Infrastructure</title><link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/1_deploy_infrastructure/</link><pubDate>Tue, 15 Sep 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/1_deploy_infrastructure/</guid><description>Many workloads depend on external resources or services for data or additional capabilities such as 3rd party data providers or service providers, DNS providers, etc. Functionality or outcomes of the workload may be at risk when dependent resources or services become degraded or unreachable.
Monitoring these dependencies will enable quick action to ensure business continuity is not affected. Setting up alerting and notifications will ensure that appropriate team members are aware of issues and can take action to address the situation.</description></item><item><title>Understanding Metrics</title><link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/2_understand_metrics/</link><pubDate>Tue, 15 Sep 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/2_understand_metrics/</guid><description>Workloads can and should be designed to emit a variety of metrics such as application metrics (number of requests, error codes), infrastructure metrics (CPU, memory, disk usage), etc. These metrics should be tied back to KPI(s) that are used to measure a certain aspect of the business. Understanding different workload metrics will allow you to select the right metric to monitor, and understand the availability or status of your workload and its dependencies.</description></item><item><title>Create an Alarm</title><link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/3_create_alarm/</link><pubDate>Tue, 15 Sep 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/3_create_alarm/</guid><description>Now that the right metric has been identified to monitor the dependency, it is time to create an alarm to monitor the metric and send notifications based on thresholds defined. CloudWatch Alarms can be used to automatically initiate actions on your behalf. An alarm watches a single metric over a specified time period, and performs one or more specified actions, based on the value of the metric relative to a threshold over time.</description></item><item><title>Test Fail Condition</title><link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/4_test_fail_condition/</link><pubDate>Tue, 15 Sep 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/4_test_fail_condition/</guid><description>Now that an alarm has been created to alert and send out notifications when the external service is experiencing an outage, it is time to test it. To do this, an outage can be simulated so that the external service is no longer able to write data into S3. This can be achieved in a few different ways. These are also a few different failure modes for the dependent service, which could cause the Lambda function to not get invoked.</description></item><item><title>Bonus Content</title><link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/5_bonus_content/</link><pubDate>Tue, 15 Sep 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/5_bonus_content/</guid><description>Now that dependency monitoring has been established by leveraging CloudWatch Metrics and CloudWatch alarms, the last piece of the &amp;ldquo;puzzle&amp;rdquo; is to ensure that events related to the external service are tracked effectively so that relevant stakeholders are aware of the status of resolution. Alarms and notifications are good to alert teams of potential issues, however, tracking an event such as this will ensure co-ordination of efforts towards resolution. AWS Systems Manager OpsCenter can be used to achieve this.</description></item><item><title>Tear down this lab</title><link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/6_cleanup/</link><pubDate>Tue, 15 Sep 2020 11:16:09 -0400</pubDate><guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/6_cleanup/</guid><description>The following instructions will remove the resources that you have created in this lab.
Cleaning up Amazon CloudWatch Resources Go to the Amazon CloudWatch console at https://console.aws.amazon.com/cloudwatch and click on Alarms Search for the alarm WA-Lab-Dependency-Alarm and click on it Click on Delete on the top right hand corner Click Delete Cleaning up AWS Systems Manager OpsCenter Resources Go to the AWS Systems Manager console at https://console.aws.amazon.com/systems-manager and click on OpsCenter Click on the OpsItems tab, search by Title, select contains, and enter the value as S3 Data Writes Click on the OpsItem that has been created with the title S3 Data Writes failing Click on Set status on the top right hand corner, and select Resolved Cleaning up the CloudFormation Stack Go to the AWS CloudFormation console at https://console.</description></item></channel></rss>