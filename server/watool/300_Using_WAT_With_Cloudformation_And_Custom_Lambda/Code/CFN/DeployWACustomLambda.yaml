AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates an EC2 instance with tagging and then creates
  a Well-Architected workload review and pre-fills in some responses.
  (c) 2021 Amazon Web Services, Inc. or its affiliates. All Rights Reserved. This
  AWS Content is provided subject to the terms of the AWS Customer Agreement available
  at http://aws.amazon.com/agreement or other written agreement between Customer and
  Amazon Web Services, Inc.
Transform: AWS::Serverless-2016-10-31


Parameters:
  CreateWALambdaFunctionName:
    Type: String
    AllowedPattern: "[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+"
    Default: CreateNewWAFRFunction
  UpdateWAQLambdaFunctionName:
    Type: String
    AllowedPattern: "[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+"
    Default: UpdateWAQFunction

  LambdaFunctionsBucket:
    Description: "Bucket that the lambda source is contained in (case sensitive)"
    Default: "aws-well-architected-labs-ohio"
    # Default: "aws-well-architected-labs-virginia"
    Type: String
  WAToolCFNAPIKey:
    Description: "Object Key of the Lambda Function that will create the WA review"
    Default: "watool/WAToolCFNAPILambda.zip"
    Type: String

Resources:
  awslambdapowertoolspythonlayer:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:057560766410:applications/aws-lambda-powertools-python-layer
        SemanticVersion: 1.11.0

  CreateWAlambdaIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${CreateWALambdaFunctionName}:*
          PolicyName: lambda
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - wellarchitected:CreateWorkload
                  - wellarchitected:GetWorkload
                  - wellarchitected:List*
                  - wellarchitected:TagResource
                  - wellarchitected:UntagResource
                  - wellarchitected:UpdateWorkload
                Effect: Allow
                Resource: '*'
          PolicyName: watool


  CreateWAFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaFunctionsBucket
        S3Key: !Ref WAToolCFNAPIKey
      Description: "Lambda function to create or updated a WA review for a CloudFormation custom handler"
      FunctionName: !Ref CreateWALambdaFunctionName
      Handler: CreateWAWorkloadLambda.lambda_handler
      Layers:
        - !GetAtt awslambdapowertoolspythonlayer.Outputs.LayerVersionArn
      MemorySize: 128
      Timeout: 15
      Role: !GetAtt CreateWAlambdaIAMRole.Arn
      Runtime: python3.8

  CreateWAlambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${CreateWALambdaFunctionName}
      RetentionInDays: 90

  UpdateWAQlambdaIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${UpdateWAQLambdaFunctionName}:*
          PolicyName: lambda
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - wellarchitected:GetAnswer
                  - wellarchitected:GetWorkload
                  - wellarchitected:List*
                  - wellarchitected:TagResource
                  - wellarchitected:UntagResource
                  - wellarchitected:UpdateAnswer
                Effect: Allow
                Resource: '*'
          PolicyName: watool

  UpdateWAQFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaFunctionsBucket
        S3Key: !Ref WAToolCFNAPIKey
      Description: "Lambda function to answer questions in a pillar of a WA review for a CloudFormation custom handler"
      FunctionName: !Ref UpdateWAQLambdaFunctionName
      Handler: UpdateWAQuestionLambda.lambda_handler
      Layers:
        - !GetAtt awslambdapowertoolspythonlayer.Outputs.LayerVersionArn
      MemorySize: 128
      Timeout: 15
      Role: !GetAtt UpdateWAQlambdaIAMRole.Arn
      Runtime: python3.8

  UpdateWAQlambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${UpdateWAQLambdaFunctionName}
      RetentionInDays: 90

Outputs:
  CreateWAlambdaArn:
    Value: !GetAtt CreateWAFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}::CreateWAARN'
  UpdateWAQlambdaArn:
    Value: !GetAtt UpdateWAQFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}::UpdateWAQARN'
  LambdaPowertoolsPythonLayerARN:
    Value: !GetAtt awslambdapowertoolspythonlayer.Outputs.LayerVersionArn
    Export:
      Name: !Sub '${AWS::StackName}::LambdaPowertoolsPythonLayerARN'
