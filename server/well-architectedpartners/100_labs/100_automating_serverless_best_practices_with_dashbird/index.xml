<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Level 100: Automating Serverless Best Practices with Dashbird on AWS Well-Architected Labs</title><link>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/</link><description>Recent content in Level 100: Automating Serverless Best Practices with Dashbird on AWS Well-Architected Labs</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 31 May 2021 11:16:08 -0400</lastBuildDate><atom:link href="https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy The Blue Car Application</title><link>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/1_deploy_blue_car_application/</link><pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate><guid>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/1_deploy_blue_car_application/</guid><description>You will start by deploying the example application which allows a customer to order medical assistance based on selecting a map location. The application consists of a public AWS API gateway which connects to a serverless application layer AWS Lambda , which uses Amazon DynamoDB .
You will also deploy AWS Amplify to host the static website with CI/CD build-in and Amazon Cognito to manage users.
Our deployed architecture should reflect the following diagram:</description></item><item><title>Well-Architected Insights</title><link>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/2_well-architected_insights/</link><pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate><guid>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/2_well-architected_insights/</guid><description>Well-Architected Insights provides serverless developers with insights and recommendations to continually improve their applications and keep them secure, compliant, optimized, and efficient.
The second section of the lab will demonstrate how to automatically create a role in your AWS account, delegating read-only access to various services in your AWS account. Follow these steps to complete the configuration:
2.1. Account Onboarding to Dashbird. If you are new to Dashbird, sign up for a free account in Dashbird.</description></item><item><title>Modern Load Test</title><link>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/3_modern_load_test/</link><pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate><guid>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/3_modern_load_test/</guid><description>The on-demand nature of the AWS Cloud allows for a production-scale test environment to be deployed in a matter of minutes.
While AWS serverless services allow for efficient scaling individually, it is important to consider the effect of Service Quotas at both region and account level. Ignoring these maximum limits can become immediately impactful to a production workload.
In this section we will perform load testing on our deployed Blue Car application to ensure that the architecture scales in alignment to the traffic which is being processed.</description></item><item><title>Tear down</title><link>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/4_teardown/</link><pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate><guid>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/4_teardown/</guid><description>The following steps will remove the services which are deployed in the lab.
1. Delete CloudFormation stacks Go to aws-well-architected-labs/static/wapartners/100_Automating_Serverless_Best_Practices_with_Dashbird/Code/oncall-health-sample-app directory path and run teardown_script.sh. cd aws-well-architected-labs/static/wapartners/100_Automating_Serverless_Best_Practices_with_Dashbird/Code/oncall-health-sample-app bash teardown_script.sh END OF SECTION 4</description></item></channel></rss>